import torch
from torch import (
    dtype as _dtype
)
from typing import SupportsInt, Optional

def assert_shape(x: torch.Tensor, shape: tuple[int | SupportsInt, ...]) -> int: ...
def assert_dtype(x: torch.Tensor, dtype: _dtype) -> int: ...
def assert_dim(x: torch.Tensor, dim: int) -> int: ...
def assert_true(x: bool, msg: str) -> int: ...
def assert_eq(x: torch.Tensor, y: torch.Tensor) -> int: ...

def batched_index_gen(x: torch.Tensor, *, min_size: Optional[int] = None) -> torch.Tensor: ...

def t5_self_attention(query: torch.Tensor, key: torch.Tensor, value: torch.Tensor, attn_mask: torch.Tensor, num_heads: int) -> torch.Tensor: ...